// file: proto/netsqlite/v1/netsqlite.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: proto/netsqlite/v1/netsqlite.proto

package netsqlitev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DatabaseName  string                 `protobuf:"bytes,1,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"` // MUST specify the target database for the ping
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_proto_netsqlite_v1_netsqlite_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // e.g., "PONG for db [database_name]"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_proto_netsqlite_v1_netsqlite_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ExecRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DatabaseName  string                 `protobuf:"bytes,1,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"` // Identify the target database
	Sql           string                 `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`                                       // The SQL statement
	Args          []*structpb.Value      `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`                                     // Arguments
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecRequest) Reset() {
	*x = ExecRequest{}
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecRequest) ProtoMessage() {}

func (x *ExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecRequest.ProtoReflect.Descriptor instead.
func (*ExecRequest) Descriptor() ([]byte, []int) {
	return file_proto_netsqlite_v1_netsqlite_proto_rawDescGZIP(), []int{2}
}

func (x *ExecRequest) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *ExecRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *ExecRequest) GetArgs() []*structpb.Value {
	if x != nil {
		return x.Args
	}
	return nil
}

type ExecResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RowsAffected  int64                  `protobuf:"varint,1,opt,name=rows_affected,json=rowsAffected,proto3" json:"rows_affected,omitempty"`
	LastInsertId  int64                  `protobuf:"varint,2,opt,name=last_insert_id,json=lastInsertId,proto3" json:"last_insert_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecResponse) Reset() {
	*x = ExecResponse{}
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResponse) ProtoMessage() {}

func (x *ExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecResponse.ProtoReflect.Descriptor instead.
func (*ExecResponse) Descriptor() ([]byte, []int) {
	return file_proto_netsqlite_v1_netsqlite_proto_rawDescGZIP(), []int{3}
}

func (x *ExecResponse) GetRowsAffected() int64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

func (x *ExecResponse) GetLastInsertId() int64 {
	if x != nil {
		return x.LastInsertId
	}
	return 0
}

type QueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DatabaseName  string                 `protobuf:"bytes,1,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"` // Identify the target database
	Sql           string                 `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`                                       // The SQL query
	Args          []*structpb.Value      `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`                                     // Arguments
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_proto_netsqlite_v1_netsqlite_proto_rawDescGZIP(), []int{4}
}

func (x *QueryRequest) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *QueryRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *QueryRequest) GetArgs() []*structpb.Value {
	if x != nil {
		return x.Args
	}
	return nil
}

type QueryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Result:
	//
	//	*QueryResponse_Columns
	//	*QueryResponse_Row
	Result        isQueryResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_proto_netsqlite_v1_netsqlite_proto_rawDescGZIP(), []int{5}
}

func (x *QueryResponse) GetResult() isQueryResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *QueryResponse) GetColumns() *Columns {
	if x != nil {
		if x, ok := x.Result.(*QueryResponse_Columns); ok {
			return x.Columns
		}
	}
	return nil
}

func (x *QueryResponse) GetRow() *Row {
	if x != nil {
		if x, ok := x.Result.(*QueryResponse_Row); ok {
			return x.Row
		}
	}
	return nil
}

type isQueryResponse_Result interface {
	isQueryResponse_Result()
}

type QueryResponse_Columns struct {
	Columns *Columns `protobuf:"bytes,1,opt,name=columns,proto3,oneof"`
}

type QueryResponse_Row struct {
	Row *Row `protobuf:"bytes,2,opt,name=row,proto3,oneof"`
}

func (*QueryResponse_Columns) isQueryResponse_Result() {}

func (*QueryResponse_Row) isQueryResponse_Result() {}

type Columns struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Names         []string               `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Columns) Reset() {
	*x = Columns{}
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Columns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Columns) ProtoMessage() {}

func (x *Columns) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Columns.ProtoReflect.Descriptor instead.
func (*Columns) Descriptor() ([]byte, []int) {
	return file_proto_netsqlite_v1_netsqlite_proto_rawDescGZIP(), []int{6}
}

func (x *Columns) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type Row struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []*structpb.Value      `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Row) Reset() {
	*x = Row{}
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netsqlite_v1_netsqlite_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_proto_netsqlite_v1_netsqlite_proto_rawDescGZIP(), []int{7}
}

func (x *Row) GetValues() []*structpb.Value {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_proto_netsqlite_v1_netsqlite_proto protoreflect.FileDescriptor

const file_proto_netsqlite_v1_netsqlite_proto_rawDesc = "" +
	"\n" +
	"\"proto/netsqlite/v1/netsqlite.proto\x12\fnetsqlite.v1\x1a\x1cgoogle/protobuf/struct.proto\"2\n" +
	"\vPingRequest\x12#\n" +
	"\rdatabase_name\x18\x01 \x01(\tR\fdatabaseName\"(\n" +
	"\fPingResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"p\n" +
	"\vExecRequest\x12#\n" +
	"\rdatabase_name\x18\x01 \x01(\tR\fdatabaseName\x12\x10\n" +
	"\x03sql\x18\x02 \x01(\tR\x03sql\x12*\n" +
	"\x04args\x18\x03 \x03(\v2\x16.google.protobuf.ValueR\x04args\"Y\n" +
	"\fExecResponse\x12#\n" +
	"\rrows_affected\x18\x01 \x01(\x03R\frowsAffected\x12$\n" +
	"\x0elast_insert_id\x18\x02 \x01(\x03R\flastInsertId\"q\n" +
	"\fQueryRequest\x12#\n" +
	"\rdatabase_name\x18\x01 \x01(\tR\fdatabaseName\x12\x10\n" +
	"\x03sql\x18\x02 \x01(\tR\x03sql\x12*\n" +
	"\x04args\x18\x03 \x03(\v2\x16.google.protobuf.ValueR\x04args\"s\n" +
	"\rQueryResponse\x121\n" +
	"\acolumns\x18\x01 \x01(\v2\x15.netsqlite.v1.ColumnsH\x00R\acolumns\x12%\n" +
	"\x03row\x18\x02 \x01(\v2\x11.netsqlite.v1.RowH\x00R\x03rowB\b\n" +
	"\x06result\"\x1f\n" +
	"\aColumns\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names\"5\n" +
	"\x03Row\x12.\n" +
	"\x06values\x18\x01 \x03(\v2\x16.google.protobuf.ValueR\x06values2\xda\x01\n" +
	"\x10NetsqliteService\x12?\n" +
	"\x04Ping\x12\x19.netsqlite.v1.PingRequest\x1a\x1a.netsqlite.v1.PingResponse\"\x00\x12?\n" +
	"\x04Exec\x12\x19.netsqlite.v1.ExecRequest\x1a\x1a.netsqlite.v1.ExecResponse\"\x00\x12D\n" +
	"\x05Query\x12\x1a.netsqlite.v1.QueryRequest\x1a\x1b.netsqlite.v1.QueryResponse\"\x000\x01B!Z\x1f/proto/netsqlite/v1;netsqlitev1b\x06proto3"

var (
	file_proto_netsqlite_v1_netsqlite_proto_rawDescOnce sync.Once
	file_proto_netsqlite_v1_netsqlite_proto_rawDescData []byte
)

func file_proto_netsqlite_v1_netsqlite_proto_rawDescGZIP() []byte {
	file_proto_netsqlite_v1_netsqlite_proto_rawDescOnce.Do(func() {
		file_proto_netsqlite_v1_netsqlite_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_netsqlite_v1_netsqlite_proto_rawDesc), len(file_proto_netsqlite_v1_netsqlite_proto_rawDesc)))
	})
	return file_proto_netsqlite_v1_netsqlite_proto_rawDescData
}

var file_proto_netsqlite_v1_netsqlite_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_netsqlite_v1_netsqlite_proto_goTypes = []any{
	(*PingRequest)(nil),    // 0: netsqlite.v1.PingRequest
	(*PingResponse)(nil),   // 1: netsqlite.v1.PingResponse
	(*ExecRequest)(nil),    // 2: netsqlite.v1.ExecRequest
	(*ExecResponse)(nil),   // 3: netsqlite.v1.ExecResponse
	(*QueryRequest)(nil),   // 4: netsqlite.v1.QueryRequest
	(*QueryResponse)(nil),  // 5: netsqlite.v1.QueryResponse
	(*Columns)(nil),        // 6: netsqlite.v1.Columns
	(*Row)(nil),            // 7: netsqlite.v1.Row
	(*structpb.Value)(nil), // 8: google.protobuf.Value
}
var file_proto_netsqlite_v1_netsqlite_proto_depIdxs = []int32{
	8, // 0: netsqlite.v1.ExecRequest.args:type_name -> google.protobuf.Value
	8, // 1: netsqlite.v1.QueryRequest.args:type_name -> google.protobuf.Value
	6, // 2: netsqlite.v1.QueryResponse.columns:type_name -> netsqlite.v1.Columns
	7, // 3: netsqlite.v1.QueryResponse.row:type_name -> netsqlite.v1.Row
	8, // 4: netsqlite.v1.Row.values:type_name -> google.protobuf.Value
	0, // 5: netsqlite.v1.NetsqliteService.Ping:input_type -> netsqlite.v1.PingRequest
	2, // 6: netsqlite.v1.NetsqliteService.Exec:input_type -> netsqlite.v1.ExecRequest
	4, // 7: netsqlite.v1.NetsqliteService.Query:input_type -> netsqlite.v1.QueryRequest
	1, // 8: netsqlite.v1.NetsqliteService.Ping:output_type -> netsqlite.v1.PingResponse
	3, // 9: netsqlite.v1.NetsqliteService.Exec:output_type -> netsqlite.v1.ExecResponse
	5, // 10: netsqlite.v1.NetsqliteService.Query:output_type -> netsqlite.v1.QueryResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_netsqlite_v1_netsqlite_proto_init() }
func file_proto_netsqlite_v1_netsqlite_proto_init() {
	if File_proto_netsqlite_v1_netsqlite_proto != nil {
		return
	}
	file_proto_netsqlite_v1_netsqlite_proto_msgTypes[5].OneofWrappers = []any{
		(*QueryResponse_Columns)(nil),
		(*QueryResponse_Row)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_netsqlite_v1_netsqlite_proto_rawDesc), len(file_proto_netsqlite_v1_netsqlite_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_netsqlite_v1_netsqlite_proto_goTypes,
		DependencyIndexes: file_proto_netsqlite_v1_netsqlite_proto_depIdxs,
		MessageInfos:      file_proto_netsqlite_v1_netsqlite_proto_msgTypes,
	}.Build()
	File_proto_netsqlite_v1_netsqlite_proto = out.File
	file_proto_netsqlite_v1_netsqlite_proto_goTypes = nil
	file_proto_netsqlite_v1_netsqlite_proto_depIdxs = nil
}
